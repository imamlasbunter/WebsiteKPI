// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Pertamina.Website_KPI.Domain.Entities;

namespace Pertamina.Website_KPI.Domain.Entities.DatabaseContext
{
    public partial class Website_KPIContext : DbContext
    {
        public Website_KPIContext()
        {
        }

        public Website_KPIContext(DbContextOptions<Website_KPIContext> options)
            : base(options)
        {
        }

        public virtual DbSet<LogActivitas> LogActivitas { get; set; }
        public virtual DbSet<TbltAfiliasi> TbltAfiliasi { get; set; }
        public virtual DbSet<TbltAnggaranDasar> TbltAnggaranDasar { get; set; }
        public virtual DbSet<TbltDewanKomisaris> TbltDewanKomisaris { get; set; }
        public virtual DbSet<TbltDireksi> TbltDireksi { get; set; }
        public virtual DbSet<TbltFokus> TbltFokus { get; set; }
        public virtual DbSet<TbltGaleryPhoto> TbltGaleryPhoto { get; set; }
        public virtual DbSet<TbltHeaderUp> TbltHeaderUp { get; set; }
        public virtual DbSet<TbltIkhtisar> TbltIkhtisar { get; set; }
        public virtual DbSet<TbltIkhtisarKeuangan> TbltIkhtisarKeuangan { get; set; }
        public virtual DbSet<TbltIkhtisarProgram> TbltIkhtisarProgram { get; set; }
        public virtual DbSet<TbltInisiatif> TbltInisiatif { get; set; }
        public virtual DbSet<TbltInovasiBisnis> TbltInovasiBisnis { get; set; }
        public virtual DbSet<TbltInovasiList> TbltInovasiList { get; set; }
        public virtual DbSet<TbltInternalAudit> TbltInternalAudit { get; set; }
        public virtual DbSet<TbltJejakLangkah> TbltJejakLangkah { get; set; }
        public virtual DbSet<TbltKeberlanjutan> TbltKeberlanjutan { get; set; }
        public virtual DbSet<TbltKebijakanKorupsi> TbltKebijakanKorupsi { get; set; }
        public virtual DbSet<TbltKebijakanManager> TbltKebijakanManager { get; set; }
        public virtual DbSet<TbltKodeEtik> TbltKodeEtik { get; set; }
        public virtual DbSet<TbltKomite> TbltKomite { get; set; }
        public virtual DbSet<TbltKomiteAudit> TbltKomiteAudit { get; set; }
        public virtual DbSet<TbltKomiteInvestasi> TbltKomiteInvestasi { get; set; }
        public virtual DbSet<TbltKomiteRemun> TbltKomiteRemun { get; set; }
        public virtual DbSet<TbltLaporanKeberlanjutan> TbltLaporanKeberlanjutan { get; set; }
        public virtual DbSet<TbltLaporanKeuangan> TbltLaporanKeuangan { get; set; }
        public virtual DbSet<TbltLaporanTahunan> TbltLaporanTahunan { get; set; }
        public virtual DbSet<TbltPenghargaan> TbltPenghargaan { get; set; }
        public virtual DbSet<TbltPiagamDireksi> TbltPiagamDireksi { get; set; }
        public virtual DbSet<TbltPiagamKomisaris> TbltPiagamKomisaris { get; set; }
        public virtual DbSet<TbltProfilPerusahaan> TbltProfilPerusahaan { get; set; }
        public virtual DbSet<TbltProfilePopup> TbltProfilePopup { get; set; }
        public virtual DbSet<TbltRegional> TbltRegional { get; set; }
        public virtual DbSet<TbltRups> TbltRups { get; set; }
        public virtual DbSet<TbltRupsHistory> TbltRupsHistory { get; set; }
        public virtual DbSet<TbltSekretarisPerusahaan> TbltSekretarisPerusahaan { get; set; }
        public virtual DbSet<TbltSertifikat> TbltSertifikat { get; set; }
        public virtual DbSet<TbltStrategi> TbltStrategi { get; set; }
        public virtual DbSet<TbltStruktur1> TbltStruktur1 { get; set; }
        public virtual DbSet<TbltStruktur2> TbltStruktur2 { get; set; }
        public virtual DbSet<TbltStruktur2card> TbltStruktur2card { get; set; }
        public virtual DbSet<TbltStruktur3> TbltStruktur3 { get; set; }
        public virtual DbSet<TbltStruktur3card> TbltStruktur3card { get; set; }
        public virtual DbSet<TbltStrukturOrganisasi> TbltStrukturOrganisasi { get; set; }
        public virtual DbSet<TbltStrukturPemegangsaham> TbltStrukturPemegangsaham { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LogActivitas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("logActivitas");

                entity.Property(e => e.Action)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("action");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.LogDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("logDate");

                entity.Property(e => e.Menu)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("menu");

                entity.Property(e => e.Role)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role");

                entity.Property(e => e.User)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("user");
            });

            modelBuilder.Entity<TbltAfiliasi>(entity =>
            {
                entity.ToTable("tblt_afiliasi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.LinkTo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("link_to");

                entity.Property(e => e.Subtitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subtitle");

                entity.Property(e => e.Title)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("updated_by");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_date");
            });

            modelBuilder.Entity<TbltAnggaranDasar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_anggaran_dasar");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltDewanKomisaris>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_dewan_komisaris");

                entity.Property(e => e.Flag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Nama)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nama");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltDireksi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_direksi");

                entity.Property(e => e.Flag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Nama)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nama");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltFokus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_fokus");

                entity.Property(e => e.Btnlink)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("btnlink");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("position");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltGaleryPhoto>(entity =>
            {
                entity.ToTable("tblt_galery_photo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.ImgPath)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("img_path");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("updated_by");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_date");
            });

            modelBuilder.Entity<TbltHeaderUp>(entity =>
            {
                entity.ToTable("tblt_header_up");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.IsActive).HasColumnName("is_active");

                entity.Property(e => e.LinkTo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("link_to");

                entity.Property(e => e.Subtitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subtitle");

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("updated_by");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_date");
            });

            modelBuilder.Entity<TbltIkhtisar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_ikhtisar");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltIkhtisarKeuangan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_ikhtisar_keuangan");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltIkhtisarProgram>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_ikhtisar_program");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgdate)
                    .HasColumnType("date")
                    .HasColumnName("imgdate");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.Imgtitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgtitle");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltInisiatif>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_inisiatif");

                entity.Property(e => e.Descr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("descr");

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("title");
            });

            modelBuilder.Entity<TbltInovasiBisnis>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_inovasi_bisnis");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltInovasiList>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_inovasi_list");

                entity.Property(e => e.Filapath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filapath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltInternalAudit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_internal_audit");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltJejakLangkah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_jejak_langkah");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKeberlanjutan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_keberlanjutan");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("position");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKebijakanKorupsi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_kebijakan_korupsi");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKebijakanManager>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_kebijakan_manager");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKodeEtik>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_kode_etik");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Descr2)
                    .HasColumnType("text")
                    .HasColumnName("descr2");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDelete).HasColumnName("is_delete");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKomite>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_komite");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.Imgtitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgtitle");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKomiteAudit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_komite_audit");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKomiteInvestasi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_komite_investasi");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltKomiteRemun>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_komite_remun");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltLaporanKeberlanjutan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_laporan_keberlanjutan");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Lapdate)
                    .HasColumnType("date")
                    .HasColumnName("lapdate");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltLaporanKeuangan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_laporan_keuangan");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Lapdate)
                    .HasColumnType("date")
                    .HasColumnName("lapdate");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltLaporanTahunan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_laporan_tahunan");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Lapdate)
                    .HasColumnType("date")
                    .HasColumnName("lapdate");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltPenghargaan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_penghargaan");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltPiagamDireksi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_piagam_direksi");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltPiagamKomisaris>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_piagam_komisaris");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltProfilPerusahaan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_profil_perusahaan");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Misitext)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("misitext");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");

                entity.Property(e => e.Visitext)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("visitext");
            });

            modelBuilder.Entity<TbltProfilePopup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_profile_popup");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("position");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltRegional>(entity =>
            {
                entity.ToTable("tblt_regional");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.LinkTo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("link_to");

                entity.Property(e => e.Subtitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subtitle");

                entity.Property(e => e.Title)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("updated_by");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_date");
            });

            modelBuilder.Entity<TbltRups>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_rups");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltRupsHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_rups_history");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.RupsDate)
                    .HasColumnType("date")
                    .HasColumnName("rups_date");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltSekretarisPerusahaan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_sekretaris_perusahaan");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltSertifikat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_sertifikat");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Pemberi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pemberi");

                entity.Property(e => e.Penerima)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("penerima");

                entity.Property(e => e.PenghargaanDate)
                    .HasColumnType("date")
                    .HasColumnName("penghargaan_date");

                entity.Property(e => e.TitlePenghargaan)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title_penghargaan");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStrategi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_strategi");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filepath");

                entity.Property(e => e.Filetitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filetitle");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imgbtnlink)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgbtnlink");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStruktur1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_1");

                entity.Property(e => e.Descr1)
                    .HasColumnType("text")
                    .HasColumnName("descr1");

                entity.Property(e => e.Descr2)
                    .HasColumnType("text")
                    .HasColumnName("descr2");

                entity.Property(e => e.Imgdescr)
                    .HasColumnType("text")
                    .HasColumnName("imgdescr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.Imgtitle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgtitle");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStruktur2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_2");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStruktur2card>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_2card");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fax");

                entity.Property(e => e.HoAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ho_address");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Refinary)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("refinary");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("region");

                entity.Property(e => e.Telex)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("telex");

                entity.Property(e => e.Telp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("telp");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStruktur3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_3");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStruktur3card>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_3card");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.HoAddress)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ho_address");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Subtitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("subtitle");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStrukturOrganisasi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_organisasi");

                entity.Property(e => e.Decr)
                    .HasColumnType("text")
                    .HasColumnName("decr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            modelBuilder.Entity<TbltStrukturPemegangsaham>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblt_struktur_pemegangsaham");

                entity.Property(e => e.Descr)
                    .HasColumnType("text")
                    .HasColumnName("descr");

                entity.Property(e => e.Imgpath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("imgpath");

                entity.Property(e => e.Imgtitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("imgtitle");

                entity.Property(e => e.InsertDate)
                    .HasColumnType("datetime")
                    .HasColumnName("insert_date");

                entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("update_date");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}